plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'no.daffern.artemis'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    google()
}

java {
    // withJavadocJar()
    // withSourcesJar()
}

dependencies {
    compile gradleApi()

    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "com.squareup:javapoet:1.11.1"
    compile group: 'org.jboss.forge.roaster', name: 'roaster-jdt', version: '2.21.1.Final'
    compile "net.onedaybeard.artemis:artemis-odb:2.3.0"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'artemis-entity-builder-plugin'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Artemis entity builder source generator'
                description = 'Generates a builder for prototyping Artemis entities based on .java files'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Daffern'
                        name = 'Dag Rui'
                        email = 'dagerns@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Dag-Rui/artemis-entity-builder.git'
                    developerConnection = 'scm:git:ssh://github.com/Dag-Rui/artemis-entity-builder.git'
                    url = 'http://github.com/Dag-Rui/artemis-entity-builder'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

